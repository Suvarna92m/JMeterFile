<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="EclipseAPI File Creation in South Central TX Office" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.2.4.18. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">certload02.aws.eclipse.firstam.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">certload02.aws.eclipse.firstam.net</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">certload02.aws.eclipse.firstam.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">https://eval02.aws.wsinterfaces.firstam.net/Eclipse/swagger/ui/index</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ADAuth_Cert" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://login.microsoftonline.com/4cc65fd6-9c76-4871-a542-eb12a5a7800c/oauth2/token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client-id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client-secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${scope}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">qaAzureIgnite@firstam.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">_c_e1l5-G3Gocb0N0UkA</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${tenant-id}/oauth2/v2.0/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/_JmeterLoadTestFolder/ChargeProcess/CERT.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">environment, x-api-key, client-id, client-secret, scope, tenant-id, ignite-url, ignite-api-url</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">AzureAuthToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">AzureAuthToken</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.+?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">${__setProperty(AzureAuthToken, ${AzureAuthToken})}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">350000</stringProp>
        </TestAction>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">1800</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test-Old" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create File - Eclipse Call - South Central TX Training Office" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;AssociatedBusinessParty&quot;: null,&#xd;
&quot;BusinessPrograms&quot;: null,&#xd;
&quot;BusinessSegment&quot;: {&#xd;
&quot;Description&quot;: null,&#xd;
&quot;Id&quot;: 839,&#xd;
&quot;ObjectCd&quot;: null&#xd;
},&#xd;
 &quot;BusinessSource&quot;: {&#xd;
    &quot;Id&quot;: 115548,&#xd;
    &quot;SalesRepresentative1&quot;: null,&#xd;
    &quot;SalesRepresentative2&quot;: null,&#xd;
    &quot;RoleType&quot;: {&#xd;
      &quot;Id&quot;: 690,&#xd;
      &quot;Description&quot;: &quot;Business Source&quot;,&#xd;
      &quot;ObjectCd&quot;: null&#xd;
    },&#xd;
    &quot;BusinessOrganization&quot;: {&#xd;
      &quot;Id&quot;: 68394140,&#xd;
      &quot;AddressBookId&quot;: 213425180,&#xd;
      &quot;Code&quot;: &quot;1979481&quot;,&#xd;
      &quot;Name&quot;: &quot;Texas Bank&quot;,&#xd;
      &quot;Name2&quot;: null&#xd;
    },&#xd;
    &quot;Addresses&quot;: null,&#xd;
    &quot;PhoneNumbers&quot;: null,&#xd;
    &quot;Emails&quot;: null,&#xd;
    &quot;Contact&quot;: null,&#xd;
    &quot;ReferenceNumber&quot;: &quot;Loan101&quot;,&#xd;
    &quot;CustomerPreferenceText&quot;: null&#xd;
  },&#xd;
  &quot;BusinessPrograms&quot;: [],&#xd;
  &quot;BusinessSourceAdditionalRole&quot;: {&#xd;
    &quot;Id&quot;: 674,&#xd;
    &quot;Description&quot;: &quot;Payoff Lender&quot;,&#xd;
    &quot;ObjectCd&quot;: null&#xd;
  },&#xd;
&quot;DirectedByAdditionalRole&quot;: null,&#xd;
&quot;Buyers&quot;: [&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test&quot;,&#xd;
        &quot;LastName&quot;: &quot;Buyer&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 1,&#xd;
    },&#xd;
     &#xd;
],&#xd;
&quot;DirectedBy&quot;: null,&#xd;
&quot;ExternalFileNumber&quot;: &quot;Ignite FileChecklist file&quot;,&#xd;
&quot;FileNotes&quot;: null,&#xd;
&quot;FileNumber&quot;: null,&#xd;
&quot;FileOriginator&quot;: null,&#xd;
&quot;FileSource&quot;: {&#xd;
&quot;Description&quot;: &quot;WSP Application&quot;,&#xd;
&quot;Id&quot;: 13,&#xd;
&quot;ObjectCd&quot;: null&#xd;
},&#xd;
&quot;FileStatus&quot;: null,&#xd;
&quot;FileUnderwriter&quot;: null,&#xd;
&quot;Id&quot;: 0,&#xd;
&quot;MasterFileFlag&quot;: null,&#xd;
&quot;NewLoans&quot;: null,&#xd;
&quot;DocGenFlag&quot;: null,&#xd;
&quot;OpenDate&quot;: null,&#xd;
&quot;Products&quot;: null,&#xd;
&quot;ProgramType&quot;: null,&#xd;
&quot;Properties&quot;: [&#xd;
{&#xd;
&quot;Addresses&quot;: [&#xd;
{&#xd;
&quot;AddressType&quot;: null,&#xd;
&quot;City&quot;: null,&#xd;
&quot;Country&quot;: null,&#xd;
&quot;County&quot;:&#xd;
{&#xd;
&quot;Name&quot;: &quot;Anderson&quot;&#xd;
},&#xd;
&quot;Id&quot;: 0,&#xd;
&quot;Line1&quot;: null,&#xd;
&quot;Line2&quot;: null,&#xd;
&quot;Line3&quot;: null,&#xd;
&quot;Line4&quot;: null,&#xd;
&quot;State&quot;: {&#xd;
&quot;Code&quot;: &quot;TX&quot;,&#xd;
&quot;FIPSCode&quot;: 1,&#xd;
&quot;Id&quot;: null,&#xd;
&quot;Name&quot;: null&#xd;
},&#xd;
&quot;ZipCode&quot;: null&#xd;
}&#xd;
],&#xd;
&quot;Id&quot;: 0,&#xd;
&quot;Name&quot;: null,&#xd;
&quot;SequenceNumber&quot;: null,&#xd;
&quot;PropertyType&quot;: null,&#xd;
&quot;Taxes&quot;: null&#xd;
}&#xd;
],&#xd;
&quot;SalesPrice&quot;: null,&#xd;
&quot;SalesPriceLiabilityAmount&quot;: null,&#xd;
&quot;SearchType&quot;: null,&#xd;
&quot;SecondExternalFileNumber&quot;: null,&#xd;
&quot;SecondFileOriginator&quot;: null,&#xd;
&quot;SecondFileSource&quot;: null,&#xd;
&quot;Sellers&quot;: [&#xd;
 {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 1,&#xd;
    },&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test1&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 2,&#xd;
    },&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test2&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 3,&#xd;
    },&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test3&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 4,&#xd;
    },&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test4&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 5,&#xd;
    },&#xd;
&#xd;
],&#xd;
&quot;Services&quot;: [&#xd;
{&#xd;
&quot;Assistant&quot;: null,&#xd;
&quot;Id&quot;: 0,&#xd;
&quot;Officer&quot;: null,&#xd;
&quot;OwningOffice&quot;: {&#xd;
&quot;Id&quot;: 191,&#xd;
&quot;Name&quot;: null,&#xd;
&quot;StateLicense&quot;: null&#xd;
},&#xd;
&quot;ProductionOffices&quot;: null,&#xd;
&quot;ServiceType&quot;: {&#xd;
&quot;Description&quot;: null,&#xd;
&quot;Id&quot;: 21&#xd;
},&#xd;
&quot;ExternalServiceNumber&quot;: null&#xd;
}&#xd;
],&#xd;
&quot;TransactionType&quot;: {&#xd;
&quot;Description&quot;: null,&#xd;
&quot;Id&quot;: 1,&#xd;
&quot;ObjectCd&quot;: null&#xd;
},&#xd;
&quot;ProjectFileFlag&quot;: null,&#xd;
&quot;ProjectFileId&quot;: null,&#xd;
&quot;ReservedFileNumberFlag&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Eclipse/api/files</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyIsImtpZCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyJ9.eyJhdWQiOiJodHRwOi8vTXlJRGFhU1VhdC9GQUYvRWNsaXBzZS9BUEkiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9kY2RjYjJhYS03ODVhLTQwYjktOWNkZi1jM2IwNjgwMDdkYTIvIiwiaWF0IjoxNjg2ODk4OTUxLCJuYmYiOjE2ODY4OTg5NTEsImV4cCI6MTY4NjkwMjg1MSwiYWlvIjoiRTJaZ1lCRExQTDNzWUViRGk0TEtweWU2dDF4M0FBQT0iLCJhcHBpZCI6ImQyMGQzYWY0LThkNTEtNGY4Zi1hOTNjLTdhZjIzZjExY2Y5YyIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0L2RjZGNiMmFhLTc4NWEtNDBiOS05Y2RmLWMzYjA2ODAwN2RhMi8iLCJyaCI6IjAuQVJZQXFyTGMzRnA0dVVDYzM4T3dhQUI5b3FYNWR0YlBoMjFGb0U3ZmZLb0RnQnNXQUFBLiIsInRpZCI6ImRjZGNiMmFhLTc4NWEtNDBiOS05Y2RmLWMzYjA2ODAwN2RhMiIsInV0aSI6IlVkNlNkemQ1UGtXOWhhV0hjV1FIQUEiLCJ2ZXIiOiIxLjAifQ.GMwv_g3UVQm8mlSB6sHDBE4mDDelU0UrGl7A5q2W53-sErCN3GTOKqU3jBQaQGi1ckHbSjkgeCaQm-zkSS2em7dk0aCOHCHXSKd_3JQdGE7HFkCiJ9MYPPbhqEhcAtyy4jChACrtdNXNVlIhzkn06T74ieuuvzdFwD33Wv7O_JPsXUxMXW0Lnt_ojCs4UamGWI3kDqtZeL7AgLFHbu_VeO7WWK3Q9BM9Kff_GSWsIoTuoQIv_Jz2X-qHxBxLm0hKXO0_x7xDgP7IFl_vRLqCT7kYHXcGNwfaQEyxGHtL34XRAuYcd73xLjhN7aEynM2O1wuzcZ2A9QC2Ni_2EqLdpw</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EcliseAuthCode" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - Certload02" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1ae4f9c5-95d5-483a-84d9-3c51cfb8ae21</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">clientId</stringProp>
                </elementProp>
                <elementProp name="clientSecret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">v028Q~yad3Us1xjnIIaDW7LX2nigiW2mrJR1jbCx</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">clientSecret</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Eclipse/api/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Auth</stringProp>
              <stringProp name="RegexExtractor.regex"> &quot;Token&quot;: &quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request-Fint09" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">d20d3af4-8d51-4f8f-a93c-7af23f11cf9c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">clientId</stringProp>
                </elementProp>
                <elementProp name="clientSecret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">a00U&amp;4Lh(3(K}SqIP$=&amp;hgey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">clientSecret</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fint09.aws.wsinterfaces.firstam.net</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Eclipse/api/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Auth</stringProp>
              <stringProp name="RegexExtractor.regex"> &quot;Token&quot;: &quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test-New_14383 (SouthWest Propech)" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="iDashToken" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">client_credentials</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">d20d3af4-8d51-4f8f-a93c-7af23f11cf9c</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">a00U&amp;4Lh(3(K}SqIP$=&amp;hgey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="resource" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">resource</stringProp>
                  <stringProp name="Argument.value">http://MyIDaaSDev/FAF/Eclipse/POC/API</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/MyIDaaSDev.onmicrosoft.com/oauth2/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.refname">iDashAccessToken</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.+)&quot;}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create File - Eclipse Call - South Central TX Training Office" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;AssociatedBusinessParty&quot;: null,&#xd;
&quot;BusinessPrograms&quot;: null,&#xd;
&quot;BusinessSegment&quot;: {&#xd;
&quot;Description&quot;: null,&#xd;
&quot;Id&quot;: 839,&#xd;
&quot;ObjectCd&quot;: null&#xd;
},&#xd;
 &quot;BusinessSource&quot;: {&#xd;
    &quot;Id&quot;: 836394511,&#xd;
    &quot;SalesRepresentative1&quot;: null,&#xd;
    &quot;SalesRepresentative2&quot;: null,&#xd;
    &quot;RoleType&quot;: {&#xd;
      &quot;Id&quot;: 690,&#xd;
      &quot;Description&quot;: &quot;Business Source&quot;,&#xd;
      &quot;ObjectCd&quot;: null&#xd;
    },&#xd;
    &quot;BusinessOrganization&quot;: {&#xd;
      &quot;Id&quot;: 56661786,&#xd;
      &quot;AddressBookId&quot;: 163991555,&#xd;
      &quot;Code&quot;: &quot;1155418&quot;,&#xd;
      &quot;Name&quot;: &quot;Texas Bank&quot;,&#xd;
      &quot;Name2&quot;: null&#xd;
    },&#xd;
    &quot;Addresses&quot;: null,&#xd;
    &quot;PhoneNumbers&quot;: null,&#xd;
    &quot;Emails&quot;: null,&#xd;
    &quot;Contact&quot;: null,&#xd;
    &quot;ReferenceNumber&quot;: &quot;Loan101&quot;,&#xd;
    &quot;CustomerPreferenceText&quot;: null&#xd;
  },&#xd;
  &quot;BusinessPrograms&quot;: [],&#xd;
  &quot;BusinessSourceAdditionalRole&quot;: {&#xd;
    &quot;Id&quot;: 674,&#xd;
    &quot;Description&quot;: &quot;Payoff Lender&quot;,&#xd;
    &quot;ObjectCd&quot;: null&#xd;
  },&#xd;
&quot;DirectedByAdditionalRole&quot;: null,&#xd;
&quot;Buyers&quot;: [&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test&quot;,&#xd;
        &quot;LastName&quot;: &quot;Buyer&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 1,&#xd;
    },&#xd;
     &#xd;
],&#xd;
&quot;DirectedBy&quot;: null,&#xd;
&quot;ExternalFileNumber&quot;: &quot;Ignite FileChecklist April29&quot;,&#xd;
&quot;FileNotes&quot;: null,&#xd;
&quot;FileNumber&quot;: null,&#xd;
&quot;FileOriginator&quot;: null,&#xd;
&quot;FileSource&quot;: {&#xd;
&quot;Description&quot;: &quot;WSP Application&quot;,&#xd;
&quot;Id&quot;: 13,&#xd;
&quot;ObjectCd&quot;: null&#xd;
},&#xd;
&quot;FileStatus&quot;: null,&#xd;
&quot;FileUnderwriter&quot;: null,&#xd;
&quot;Id&quot;: 0,&#xd;
&quot;MasterFileFlag&quot;: null,&#xd;
&quot;NewLoans&quot;: null,&#xd;
&quot;DocGenFlag&quot;: null,&#xd;
&quot;OpenDate&quot;: null,&#xd;
&quot;Products&quot;: null,&#xd;
&quot;ProgramType&quot;: null,&#xd;
&quot;Properties&quot;: [&#xd;
{&#xd;
&quot;Addresses&quot;: [&#xd;
{&#xd;
&quot;AddressType&quot;: null,&#xd;
&quot;City&quot;: null,&#xd;
&quot;Country&quot;: null,&#xd;
&quot;County&quot;:&#xd;
{&#xd;
&quot;Name&quot;: &quot;Anderson&quot;&#xd;
},&#xd;
&quot;Id&quot;: 0,&#xd;
&quot;Line1&quot;: null,&#xd;
&quot;Line2&quot;: null,&#xd;
&quot;Line3&quot;: null,&#xd;
&quot;Line4&quot;: null,&#xd;
&quot;State&quot;: {&#xd;
&quot;Code&quot;: &quot;MI&quot;,&#xd;
&quot;FIPSCode&quot;: 1,&#xd;
&quot;Id&quot;: null,&#xd;
&quot;Name&quot;: null&#xd;
},&#xd;
&quot;ZipCode&quot;: null&#xd;
}&#xd;
],&#xd;
&quot;Id&quot;: 0,&#xd;
&quot;Name&quot;: null,&#xd;
&quot;SequenceNumber&quot;: null,&#xd;
&quot;PropertyType&quot;: null,&#xd;
&quot;Taxes&quot;: null&#xd;
}&#xd;
],&#xd;
&quot;SalesPrice&quot;: null,&#xd;
&quot;SalesPriceLiabilityAmount&quot;: null,&#xd;
&quot;SearchType&quot;: null,&#xd;
&quot;SecondExternalFileNumber&quot;: null,&#xd;
&quot;SecondFileOriginator&quot;: null,&#xd;
&quot;SecondFileSource&quot;: null,&#xd;
&quot;Sellers&quot;: [&#xd;
 {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 1,&#xd;
    },&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test1&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 2,&#xd;
    },&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test2&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 3,&#xd;
    },&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test3&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 4,&#xd;
    },&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test4&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 5,&#xd;
    },&#xd;
&#xd;
],&#xd;
&quot;Services&quot;: [&#xd;
{&#xd;
&quot;Assistant&quot;: null,&#xd;
&quot;Id&quot;: 0,&#xd;
&quot;Officer&quot;: null,&#xd;
&quot;OwningOffice&quot;: {&#xd;
&quot;Id&quot;: 14383,&#xd;
&quot;Name&quot;: null,&#xd;
&quot;StateLicense&quot;: null&#xd;
},&#xd;
&quot;ProductionOffices&quot;: null,&#xd;
&quot;ServiceType&quot;: {&#xd;
&quot;Description&quot;: null,&#xd;
&quot;Id&quot;: 21&#xd;
},&#xd;
&quot;ExternalServiceNumber&quot;: null&#xd;
}&#xd;
],&#xd;
&quot;TransactionType&quot;: {&#xd;
&quot;Description&quot;: null,&#xd;
&quot;Id&quot;: 1,&#xd;
&quot;ObjectCd&quot;: null&#xd;
},&#xd;
&quot;ProjectFileFlag&quot;: null,&#xd;
&quot;ProjectFileId&quot;: null,&#xd;
&quot;ReservedFileNumberFlag&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Eclipse/api/files</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${iDashAccessToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FileNumber</stringProp>
              <stringProp name="RegexExtractor.regex">Ignite FileChecklist April29&quot;,&quot;FileNumber&quot;:&quot;(.+?)&quot;,&quot;FileOriginator&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">IgniteFileNum</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;LastName&quot;:null}},&quot;Id&quot;:(.+?),&quot;MasterFileFlag&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FileNumber</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Ignite FileChecklist April29&quot;,&quot;FileNumber&quot;:&quot;(.+?)&quot;,&quot;FileOriginator&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">IgniteFileNum</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;LastName&quot;:null}},&quot;Id&quot;:(.+?),&quot;MasterFileFlag&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters">${FileNumber},${IgniteFileNum}</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

String path=FileServer.getFileServer().getBaseDir();

     String var1 = vars.get(&quot;FileNumber&quot;);
     String var2 = vars.get(&quot;IgniteFileNum&quot;);


f = new FileOutputStream(&quot;C://_JmeterLoadTestFolder/MaxDopBaseline3K.csv&quot;,true);
p = new PrintStream(f); 

this.interpreter.setOut(p); 
p.println(var1 + &quot;,&quot; + var2);

f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">20000</stringProp>
          </TestAction>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test-New_5245" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="iDashToken" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">client_credentials</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">d20d3af4-8d51-4f8f-a93c-7af23f11cf9c</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">a00U&amp;4Lh(3(K}SqIP$=&amp;hgey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="resource" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">resource</stringProp>
                  <stringProp name="Argument.value">http://MyIDaaSDev/FAF/Eclipse/POC/API</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/MyIDaaSDev.onmicrosoft.com/oauth2/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.refname">iDashAccessToken</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.+)&quot;}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create File - Eclipse Call - South Central TX Training Office" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;AssociatedBusinessParty&quot;: null,&#xd;
&quot;BusinessPrograms&quot;: null,&#xd;
&quot;BusinessSegment&quot;: {&#xd;
&quot;Description&quot;: null,&#xd;
&quot;Id&quot;: 839,&#xd;
&quot;ObjectCd&quot;: null&#xd;
},&#xd;
 &quot;BusinessSource&quot;: {&#xd;
    &quot;Id&quot;: 836394511,&#xd;
    &quot;SalesRepresentative1&quot;: null,&#xd;
    &quot;SalesRepresentative2&quot;: null,&#xd;
    &quot;RoleType&quot;: {&#xd;
      &quot;Id&quot;: 690,&#xd;
      &quot;Description&quot;: &quot;Business Source&quot;,&#xd;
      &quot;ObjectCd&quot;: null&#xd;
    },&#xd;
    &quot;BusinessOrganization&quot;: {&#xd;
      &quot;Id&quot;: 56661786,&#xd;
      &quot;AddressBookId&quot;: 163991555,&#xd;
      &quot;Code&quot;: &quot;1155418&quot;,&#xd;
      &quot;Name&quot;: &quot;Texas Bank&quot;,&#xd;
      &quot;Name2&quot;: null&#xd;
    },&#xd;
    &quot;Addresses&quot;: null,&#xd;
    &quot;PhoneNumbers&quot;: null,&#xd;
    &quot;Emails&quot;: null,&#xd;
    &quot;Contact&quot;: null,&#xd;
    &quot;ReferenceNumber&quot;: &quot;Loan101&quot;,&#xd;
    &quot;CustomerPreferenceText&quot;: null&#xd;
  },&#xd;
  &quot;BusinessPrograms&quot;: [],&#xd;
  &quot;BusinessSourceAdditionalRole&quot;: {&#xd;
    &quot;Id&quot;: 674,&#xd;
    &quot;Description&quot;: &quot;Payoff Lender&quot;,&#xd;
    &quot;ObjectCd&quot;: null&#xd;
  },&#xd;
&quot;DirectedByAdditionalRole&quot;: null,&#xd;
&quot;Buyers&quot;: [&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test&quot;,&#xd;
        &quot;LastName&quot;: &quot;Buyer&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 1,&#xd;
    },&#xd;
     &#xd;
],&#xd;
&quot;DirectedBy&quot;: null,&#xd;
&quot;ExternalFileNumber&quot;: &quot;Ignite FileChecklist April29&quot;,&#xd;
&quot;FileNotes&quot;: null,&#xd;
&quot;FileNumber&quot;: null,&#xd;
&quot;FileOriginator&quot;: null,&#xd;
&quot;FileSource&quot;: {&#xd;
&quot;Description&quot;: &quot;WSP Application&quot;,&#xd;
&quot;Id&quot;: 13,&#xd;
&quot;ObjectCd&quot;: null&#xd;
},&#xd;
&quot;FileStatus&quot;: null,&#xd;
&quot;FileUnderwriter&quot;: null,&#xd;
&quot;Id&quot;: 0,&#xd;
&quot;MasterFileFlag&quot;: null,&#xd;
&quot;NewLoans&quot;: null,&#xd;
&quot;DocGenFlag&quot;: null,&#xd;
&quot;OpenDate&quot;: null,&#xd;
&quot;Products&quot;: null,&#xd;
&quot;ProgramType&quot;: null,&#xd;
&quot;Properties&quot;: [&#xd;
{&#xd;
&quot;Addresses&quot;: [&#xd;
{&#xd;
&quot;AddressType&quot;: null,&#xd;
&quot;City&quot;: null,&#xd;
&quot;Country&quot;: null,&#xd;
&quot;County&quot;:&#xd;
{&#xd;
&quot;Name&quot;: &quot;Anderson&quot;&#xd;
},&#xd;
&quot;Id&quot;: 0,&#xd;
&quot;Line1&quot;: null,&#xd;
&quot;Line2&quot;: null,&#xd;
&quot;Line3&quot;: null,&#xd;
&quot;Line4&quot;: null,&#xd;
&quot;State&quot;: {&#xd;
&quot;Code&quot;: &quot;TX&quot;,&#xd;
&quot;FIPSCode&quot;: 1,&#xd;
&quot;Id&quot;: null,&#xd;
&quot;Name&quot;: null&#xd;
},&#xd;
&quot;ZipCode&quot;: null&#xd;
}&#xd;
],&#xd;
&quot;Id&quot;: 0,&#xd;
&quot;Name&quot;: null,&#xd;
&quot;SequenceNumber&quot;: null,&#xd;
&quot;PropertyType&quot;: null,&#xd;
&quot;Taxes&quot;: null&#xd;
}&#xd;
],&#xd;
&quot;SalesPrice&quot;: null,&#xd;
&quot;SalesPriceLiabilityAmount&quot;: null,&#xd;
&quot;SearchType&quot;: null,&#xd;
&quot;SecondExternalFileNumber&quot;: null,&#xd;
&quot;SecondFileOriginator&quot;: null,&#xd;
&quot;SecondFileSource&quot;: null,&#xd;
&quot;Sellers&quot;: [&#xd;
 {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 1,&#xd;
    },&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test1&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 2,&#xd;
    },&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test2&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 3,&#xd;
    },&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test3&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 4,&#xd;
    },&#xd;
    {&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Test4&quot;,&#xd;
        &quot;LastName&quot;: &quot;Seller&quot;,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 5,&#xd;
    },&#xd;
&#xd;
],&#xd;
&quot;Services&quot;: [&#xd;
{&#xd;
&quot;Assistant&quot;: null,&#xd;
&quot;Id&quot;: 0,&#xd;
&quot;Officer&quot;: null,&#xd;
&quot;OwningOffice&quot;: {&#xd;
&quot;Id&quot;: 5245,&#xd;
&quot;Name&quot;: null,&#xd;
&quot;StateLicense&quot;: null&#xd;
},&#xd;
&quot;ProductionOffices&quot;: null,&#xd;
&quot;ServiceType&quot;: {&#xd;
&quot;Description&quot;: null,&#xd;
&quot;Id&quot;: 21&#xd;
},&#xd;
&quot;ExternalServiceNumber&quot;: null&#xd;
}&#xd;
],&#xd;
&quot;TransactionType&quot;: {&#xd;
&quot;Description&quot;: null,&#xd;
&quot;Id&quot;: 1,&#xd;
&quot;ObjectCd&quot;: null&#xd;
},&#xd;
&quot;ProjectFileFlag&quot;: null,&#xd;
&quot;ProjectFileId&quot;: null,&#xd;
&quot;ReservedFileNumberFlag&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Eclipse/api/files</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${iDashAccessToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FileNumber</stringProp>
              <stringProp name="RegexExtractor.regex">Ignite FileChecklist April29&quot;,&quot;FileNumber&quot;:&quot;(.+?)&quot;,&quot;FileOriginator&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">IgniteFileNum</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;LastName&quot;:null}},&quot;Id&quot;:(.+?),&quot;MasterFileFlag&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FileNumber</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Ignite FileChecklist April29&quot;,&quot;FileNumber&quot;:&quot;(.+?)&quot;,&quot;FileOriginator&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">IgniteFileNum</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;LastName&quot;:null}},&quot;Id&quot;:(.+?),&quot;MasterFileFlag&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters">${FileNumber},${IgniteFileNum}</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

String path=FileServer.getFileServer().getBaseDir();

     String var1 = vars.get(&quot;FileNumber&quot;);
     String var2 = vars.get(&quot;IgniteFileNum&quot;);


f = new FileOutputStream(&quot;C://_JmeterLoadTestFolder/MaxDopBaseline3K.csv&quot;,true);
p = new PrintStream(f); 

this.interpreter.setOut(p); 
p.println(var1 + &quot;,&quot; + var2);

f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">20000</stringProp>
          </TestAction>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="iDashToken-Fint05" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
                <stringProp name="Argument.value">client_credentials</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
                <stringProp name="Argument.value">d20d3af4-8d51-4f8f-a93c-7af23f11cf9c</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
                <stringProp name="Argument.value">a00U&amp;4Lh(3(K}SqIP$=&amp;hgey</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="resource" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">resource</stringProp>
                <stringProp name="Argument.value">http://MyIDaaSDev/FAF/Eclipse/POC/API</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/MyIDaaSDev.onmicrosoft.com/oauth2/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.refname">iDashAccessToken</stringProp>
            <stringProp name="RegexExtractor.regex">access_token&quot;:&quot;(.+)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">NotFound</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="iDashToken" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
                <stringProp name="Argument.value">client_credentials</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
                <stringProp name="Argument.value">1ae4f9c5-95d5-483a-84d9-3c51cfb8ae21</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
                <stringProp name="Argument.value">v028Q~yad3Us1xjnIIaDW7LX2nigiW2mrJR1jbCx</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="resource" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">resource</stringProp>
                <stringProp name="Argument.value">http://MyIDaaSDev/FAF/Eclipse/POC/API</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/MyIDaaSDev.onmicrosoft.com/oauth2/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.refname">iDashAccessToken</stringProp>
            <stringProp name="RegexExtractor.regex">access_token&quot;:&quot;(.+)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">NotFound</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="iDashToken-UAT" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
                <stringProp name="Argument.value">client_credentials</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
                <stringProp name="Argument.value">c88e8846-3498-43fa-a424-fad26932a9fb</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
                <stringProp name="Argument.value">8&quot;:F{egs1FcmK0o=)jyvH5#e</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="resource" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">resource</stringProp>
                <stringProp name="Argument.value">http://MyIDaaSDev/FAF/Eclipse/POC/API</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/MyIDaaSDev.onmicrosoft.com/oauth2/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.refname">iDashAccessToken</stringProp>
            <stringProp name="RegexExtractor.regex">access_token&quot;:&quot;(.+)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">NotFound</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test-New WA Template File Creation" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create File - Eclipse Call - South Central TX Training Office" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;AssociatedBusinessParty&quot;: null,&#xd;
&quot;BusinessPrograms&quot;: null,&#xd;
&quot;BusinessSegment&quot;: {&#xd;
&quot;Description&quot;: &quot;Residential&quot;,&#xd;
&quot;Id&quot;: 839,&#xd;
&quot;ObjectCd&quot;: null&#xd;
},&#xd;
 &quot;BusinessSource&quot;: {&#xd;
    &quot;Id&quot;: 870160412,&#xd;
    &quot;SalesRepresentative1&quot;: {&#xd;
      &quot;EmployeeId&quot;: 151118,&#xd;
      &quot;FirstName&quot;: &quot;Nicole&quot;,&#xd;
      &quot;LastName&quot;: &quot;Neufeld&quot;&#xd;
    },&#xd;
    &quot;SalesRepresentative2&quot;: {&#xd;
      &quot;EmployeeId&quot;: 112450,&#xd;
      &quot;FirstName&quot;: &quot;Amber&quot;,&#xd;
      &quot;LastName&quot;: &quot;Wharton&quot;&#xd;
    },&#xd;
    &quot;RoleType&quot;: {&#xd;
      &quot;Id&quot;: 690,&#xd;
      &quot;Description&quot;: &quot;Business Source&quot;,&#xd;
      &quot;ObjectCd&quot;: null&#xd;
    },&#xd;
    &quot;BusinessOrganization&quot;: {&#xd;
      &quot;Id&quot;: 71277658,&#xd;
      &quot;AddressBookId&quot;: 224566141,&#xd;
      &quot;Code&quot;: &quot;RA1010894&quot;,&#xd;
      &quot;Name&quot;: &quot;Julie Granahan&quot;,&#xd;
      &quot;Name2&quot;: null&#xd;
    },&#xd;
    &quot;Addresses&quot;: null,&#xd;
    &quot;PhoneNumbers&quot;: null,&#xd;
    &quot;Emails&quot;: null,&#xd;
    &quot;Contact&quot;: null,&#xd;
    &quot;ReferenceNumber&quot;: null,&#xd;
    &quot;CustomerPreferenceText&quot;: null&#xd;
  },&#xd;
  &quot;BusinessPrograms&quot;: [&#xd;
    {&#xd;
      &quot;Id&quot;: 33,&#xd;
      &quot;Name&quot;: &quot;Listing Order&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;BusinessSourceAdditionalRole&quot;: {&#xd;
    &quot;Id&quot;: 686,&#xd;
    &quot;Description&quot;: &quot;Seller&apos;s Real Estate Agent&quot;,&#xd;
    &quot;ObjectCd&quot;: null&#xd;
  },&#xd;
&quot;DirectedByAdditionalRole&quot;: {&#xd;
    &quot;Id&quot;: 0,&#xd;
    &quot;Description&quot;: null,&#xd;
    &quot;ObjectCd&quot;: null&#xd;
  },&#xd;
&quot;Buyers&quot;: [&#xd;
    {&#xd;
      &quot;Id&quot;: 101740498,&#xd;
      &quot;BusinessPartyId&quot;: null,&#xd;
      &quot;BusinessEntity&quot;: null,&#xd;
      &quot;Couple&quot;: null,&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: &quot;Genevieve&quot;,&#xd;
        &quot;MiddleName&quot;: &quot;M.&quot;,&#xd;
        &quot;LastName&quot;: &quot;Priebe&quot;,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 1,&#xd;
      &quot;TrustEstate&quot;: null,&#xd;
      &quot;Addresses&quot;: [&#xd;
        {&#xd;
          &quot;AddressType&quot;: {&#xd;
            &quot;Id&quot;: 119,&#xd;
            &quot;Description&quot;: &quot;Current Address&quot;,&#xd;
            &quot;ObjectCd&quot;: null&#xd;
          },&#xd;
          &quot;City&quot;: {&#xd;
            &quot;FIPSCode&quot;: null,&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;Name&quot;: null&#xd;
          },&#xd;
          &quot;Country&quot;: {&#xd;
            &quot;FIPSCode&quot;: null,&#xd;
            &quot;Id&quot;: 63889,&#xd;
            &quot;Name&quot;: &quot;USA&quot;&#xd;
          },&#xd;
          &quot;County&quot;: {&#xd;
            &quot;FIPSCode&quot;: null,&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;Name&quot;: null&#xd;
          },&#xd;
          &quot;Id&quot;: 367165602,&#xd;
          &quot;Line1&quot;: null,&#xd;
          &quot;Line2&quot;: null,&#xd;
          &quot;Line3&quot;: null,&#xd;
          &quot;Line4&quot;: null,&#xd;
          &quot;State&quot;: {&#xd;
            &quot;Code&quot;: null,&#xd;
            &quot;FIPSCode&quot;: null,&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;Name&quot;: null&#xd;
          },&#xd;
          &quot;ZipCode&quot;: null&#xd;
        },&#xd;
        {&#xd;
          &quot;AddressType&quot;: {&#xd;
            &quot;Id&quot;: 120,&#xd;
            &quot;Description&quot;: &quot;Forwarding Address&quot;,&#xd;
            &quot;ObjectCd&quot;: null&#xd;
          },&#xd;
          &quot;City&quot;: {&#xd;
            &quot;FIPSCode&quot;: null,&#xd;
            &quot;Id&quot;: 58895,&#xd;
            &quot;Name&quot;: &quot;Seattle&quot;&#xd;
          },&#xd;
          &quot;Country&quot;: {&#xd;
            &quot;FIPSCode&quot;: null,&#xd;
            &quot;Id&quot;: 63889,&#xd;
            &quot;Name&quot;: &quot;USA&quot;&#xd;
          },&#xd;
          &quot;County&quot;: {&#xd;
            &quot;FIPSCode&quot;: &quot;033&quot;,&#xd;
            &quot;Id&quot;: 1602,&#xd;
            &quot;Name&quot;: &quot;King&quot;&#xd;
          },&#xd;
          &quot;Id&quot;: 367165603,&#xd;
          &quot;Line1&quot;: &quot;7953 4th Avenue SW&quot;,&#xd;
          &quot;Line2&quot;: null,&#xd;
          &quot;Line3&quot;: null,&#xd;
          &quot;Line4&quot;: null,&#xd;
          &quot;State&quot;: {&#xd;
            &quot;Code&quot;: &quot;WA&quot;,&#xd;
            &quot;FIPSCode&quot;: &quot;53&quot;,&#xd;
            &quot;Id&quot;: 56,&#xd;
            &quot;Name&quot;: &quot;Washington&quot;&#xd;
          },&#xd;
          &quot;ZipCode&quot;: &quot;98106&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;PhoneNumbers&quot;: [&#xd;
        {&#xd;
          &quot;Id&quot;: 164433248,&#xd;
          &quot;AreaCode&quot;: &quot;206&quot;,&#xd;
          &quot;CountryCode&quot;: null,&#xd;
          &quot;Extension&quot;: &quot;&quot;,&#xd;
          &quot;Number&quot;: &quot;6120615&quot;,&#xd;
          &quot;PhoneNumberAddressBookId&quot;: 0,&#xd;
          &quot;PhoneType&quot;: {&#xd;
            &quot;Id&quot;: 125,&#xd;
            &quot;Description&quot;: &quot;Cellular&quot;,&#xd;
            &quot;ObjectCd&quot;: null&#xd;
          },&#xd;
          &quot;Comments&quot;: null&#xd;
        }&#xd;
      ],&#xd;
      &quot;Emails&quot;: [&#xd;
        {&#xd;
          &quot;Id&quot;: 164431606,&#xd;
          &quot;EmailType&quot;: {&#xd;
            &quot;Id&quot;: 127,&#xd;
            &quot;Description&quot;: &quot;E-Mail&quot;,&#xd;
            &quot;ObjectCd&quot;: null&#xd;
          },&#xd;
          &quot;EmailAddress&quot;: &quot;pjrqghjs@yahoo.com&quot;,&#xd;
          &quot;EmailAddressBookId&quot;: 0,&#xd;
          &quot;Comments&quot;: null&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  ],&#xd;
&quot;DirectedBy&quot;: null,&#xd;
&quot;ExternalFileNumber&quot;: &quot;Ignite June LT Test file&quot;,&#xd;
&quot;FileNotes&quot;: null,&#xd;
&quot;FileNumber&quot;: null,&#xd;
&quot;FileOriginator&quot;: null,&#xd;
&quot;FileSource&quot;: {&#xd;
    &quot;Id&quot;: 2,&#xd;
    &quot;Description&quot;: &quot;FAST Application&quot;,&#xd;
    &quot;ObjectCd&quot;: null&#xd;
  },&#xd;
&quot;FileStatus&quot;: null,&#xd;
&quot;FileUnderwriter&quot;: {&#xd;
    &quot;OfficeUnderwriter&quot;: {&#xd;
      &quot;Id&quot;: 355,&#xd;
      &quot;Name&quot;: &quot;First American Title Insurance Company&quot;,&#xd;
      &quot;RegionUnderwriter&quot;: {&#xd;
        &quot;Id&quot;: 29,&#xd;
        &quot;Name&quot;: &quot;First American Title Insurance Company&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;PolicyIssuer&quot;: {&#xd;
      &quot;Id&quot;: 2561,&#xd;
      &quot;Description&quot;: &quot;Underwriter Issued Policy&quot;,&#xd;
      &quot;ObjectCd&quot;: null&#xd;
    },&#xd;
    &quot;Employee&quot;: {&#xd;
      &quot;EmployeeId&quot;: 0,&#xd;
      &quot;FirstName&quot;: null,&#xd;
      &quot;LastName&quot;: null&#xd;
    }&#xd;
  },&#xd;
&quot;Id&quot;: 0,&#xd;
&quot;MasterFileFlag&quot;: null,&#xd;
&quot;NewLoans&quot;:[&#xd;
    {&#xd;
      &quot;Id&quot;: 1052779713,&#xd;
      &quot;Name&quot;: null,&#xd;
      &quot;LoanAmount&quot;: 583000,&#xd;
      &quot;LoanLiabilityAmount&quot;: 583000,&#xd;
      &quot;Lender&quot;: {&#xd;
        &quot;CheckDescription&quot;: null,&#xd;
        &quot;CheckVoucher&quot;: null,&#xd;
        &quot;Id&quot;: 870160409,&#xd;
        &quot;SalesRepresentative1&quot;: null,&#xd;
        &quot;SalesRepresentative2&quot;: null,&#xd;
        &quot;RoleType&quot;: {&#xd;
          &quot;Id&quot;: 688,&#xd;
          &quot;Description&quot;: &quot;New Lender&quot;,&#xd;
          &quot;ObjectCd&quot;: null&#xd;
        },&#xd;
        &quot;BusinessOrganization&quot;: {&#xd;
          &quot;AddressBookId&quot;: 187200636,&#xd;
          &quot;Code&quot;: &quot;1527255&quot;,&#xd;
          &quot;Id&quot;: 62657852,&#xd;
          &quot;Name&quot;: &quot;New American Funding, LLC&quot;,&#xd;
          &quot;Name2&quot;: null,&#xd;
          &quot;AdHocFlag&quot;: false&#xd;
        },&#xd;
        &quot;Addresses&quot;: null,&#xd;
        &quot;PhoneNumbers&quot;: null,&#xd;
        &quot;Emails&quot;: null,&#xd;
        &quot;Contact&quot;: null,&#xd;
        &quot;ReferenceNumber&quot;: &quot;1000495640&quot;,&#xd;
        &quot;CustomerPreferenceText&quot;: null,&#xd;
        &quot;State&quot;: null,&#xd;
        &quot;NMLS&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 1,&#xd;
      &quot;LoanNumber&quot;: &quot;1000495640&quot;,&#xd;
      &quot;IsDeleted&quot;: false&#xd;
    }&#xd;
  ],&#xd;
&quot;DocGenFlag&quot;: null,&#xd;
&quot;OpenDate&quot;: null,&#xd;
&quot;Products&quot;: [&#xd;
    {&#xd;
      &quot;Id&quot;: 887,&#xd;
      &quot;Name&quot;: &quot;ALTA Homeowners (Eagle Owner) Policy&quot;,&#xd;
      &quot;PlantAccessFlag&quot;: null&#xd;
    },&#xd;
    {&#xd;
      &quot;Id&quot;: 1317,&#xd;
      &quot;Name&quot;: &quot;ALTA Extended Loan Policy&quot;,&#xd;
      &quot;PlantAccessFlag&quot;: null&#xd;
    }&#xd;
  ],&#xd;
&quot;ProgramType&quot;: {&#xd;
    &quot;Id&quot;: 0,&#xd;
    &quot;Name&quot;: null,&#xd;
    &quot;Status&quot;: null&#xd;
  },&#xd;
&quot;Properties&quot;: [&#xd;
    {&#xd;
      &quot;Addresses&quot;: [&#xd;
        {&#xd;
          &quot;AddressType&quot;: null,&#xd;
          &quot;City&quot;: {&#xd;
            &quot;FIPSCode&quot;: null,&#xd;
            &quot;Id&quot;: 58895,&#xd;
            &quot;Name&quot;: &quot;Seattle&quot;&#xd;
          },&#xd;
          &quot;Country&quot;: {&#xd;
            &quot;FIPSCode&quot;: null,&#xd;
            &quot;Id&quot;: 63889,&#xd;
            &quot;Name&quot;: &quot;USA&quot;&#xd;
          },&#xd;
          &quot;County&quot;: {&#xd;
            &quot;FIPSCode&quot;: &quot;033&quot;,&#xd;
            &quot;Id&quot;: 1602,&#xd;
            &quot;Name&quot;: &quot;King&quot;&#xd;
          },&#xd;
          &quot;Id&quot;: 367186983,&#xd;
          &quot;Line1&quot;: &quot;7953 4th Avenue SW&quot;,&#xd;
          &quot;Line2&quot;: null,&#xd;
          &quot;Line3&quot;: null,&#xd;
          &quot;Line4&quot;: null,&#xd;
          &quot;State&quot;: {&#xd;
            &quot;Code&quot;: &quot;WA&quot;,&#xd;
            &quot;FIPSCode&quot;: &quot;53&quot;,&#xd;
            &quot;Id&quot;: 56,&#xd;
            &quot;Name&quot;: &quot;Washington&quot;&#xd;
          },&#xd;
          &quot;ZipCode&quot;: &quot;98106&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;Id&quot;: 53969116,&#xd;
      &quot;Name&quot;: &quot;7972600060&quot;,&#xd;
      &quot;SequenceNumber&quot;: 1,&#xd;
      &quot;PropertyType&quot;: {&#xd;
        &quot;Id&quot;: 15,&#xd;
        &quot;Description&quot;: &quot;Single Family Residence&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;Taxes&quot;: [&#xd;
        {&#xd;
          &quot;Id&quot;: 138529588,&#xd;
          &quot;APN&quot;: &quot;797260006003&quot;,&#xd;
          &quot;TaxYear&quot;: &quot;2023&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 138532346,&#xd;
          &quot;APN&quot;: &quot;797260006003&quot;,&#xd;
          &quot;TaxYear&quot;: &quot;2022&quot;&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  ],&#xd;
&quot;SalesPrice&quot;: 801000,&#xd;
&quot;SalesPriceLiabilityAmount&quot;: 801000,&#xd;
&quot;SearchType&quot;: null,&#xd;
&quot;SecondExternalFileNumber&quot;: null,&#xd;
&quot;SecondFileOriginator&quot;: null,&#xd;
&quot;SecondFileSource&quot;: null,&#xd;
&quot;Sellers&quot;: [&#xd;
    {&#xd;
      &quot;Id&quot;: 101780552,&#xd;
      &quot;BusinessPartyId&quot;: null,&#xd;
      &quot;BusinessEntity&quot;: null,&#xd;
      &quot;Couple&quot;: {&#xd;
        &quot;Spouse1&quot;: {&#xd;
          &quot;Suffix&quot;: null,&#xd;
          &quot;FirstName&quot;: &quot;Anthonee&quot;,&#xd;
          &quot;MiddleName&quot;: &quot;M.&quot;,&#xd;
          &quot;LastName&quot;: &quot;Gibbs&quot;,&#xd;
          &quot;SSN&quot;: &quot;123456789&quot;,&#xd;
          &quot;TaxForm1099SType&quot;: null&#xd;
        },&#xd;
        &quot;Spouse2&quot;: {&#xd;
          &quot;Suffix&quot;: null,&#xd;
          &quot;FirstName&quot;: &quot;Karissa&quot;,&#xd;
          &quot;MiddleName&quot;: &quot;B.&quot;,&#xd;
          &quot;LastName&quot;: &quot;McDowell&quot;,&#xd;
          &quot;SSN&quot;: &quot;123456789&quot;,&#xd;
          &quot;TaxForm1099SType&quot;: null&#xd;
        }&#xd;
      },&#xd;
      &quot;Individual&quot;: null,&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 49,&#xd;
        &quot;Description&quot;: &quot;Husband/Wife&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 1,&#xd;
      &quot;TrustEstate&quot;: null,&#xd;
      &quot;Addresses&quot;: [&#xd;
        {&#xd;
          &quot;AddressType&quot;: {&#xd;
            &quot;Id&quot;: 119,&#xd;
            &quot;Description&quot;: &quot;Current Address&quot;,&#xd;
            &quot;ObjectCd&quot;: null&#xd;
          },&#xd;
          &quot;City&quot;: {&#xd;
            &quot;FIPSCode&quot;: null,&#xd;
            &quot;Id&quot;: 58895,&#xd;
            &quot;Name&quot;: &quot;Seattle&quot;&#xd;
          },&#xd;
          &quot;Country&quot;: {&#xd;
            &quot;FIPSCode&quot;: null,&#xd;
            &quot;Id&quot;: 63889,&#xd;
            &quot;Name&quot;: &quot;USA&quot;&#xd;
          },&#xd;
          &quot;County&quot;: {&#xd;
            &quot;FIPSCode&quot;: &quot;033&quot;,&#xd;
            &quot;Id&quot;: 1602,&#xd;
            &quot;Name&quot;: &quot;King&quot;&#xd;
          },&#xd;
          &quot;Id&quot;: 367332784,&#xd;
          &quot;Line1&quot;: &quot;7953 4th Avenue SW&quot;,&#xd;
          &quot;Line2&quot;: null,&#xd;
          &quot;Line3&quot;: null,&#xd;
          &quot;Line4&quot;: null,&#xd;
          &quot;State&quot;: {&#xd;
            &quot;Code&quot;: &quot;WA&quot;,&#xd;
            &quot;FIPSCode&quot;: &quot;53&quot;,&#xd;
            &quot;Id&quot;: 56,&#xd;
            &quot;Name&quot;: &quot;Washington&quot;&#xd;
          },&#xd;
          &quot;ZipCode&quot;: &quot;98106&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;AddressType&quot;: {&#xd;
            &quot;Id&quot;: 120,&#xd;
            &quot;Description&quot;: &quot;Forwarding Address&quot;,&#xd;
            &quot;ObjectCd&quot;: null&#xd;
          },&#xd;
          &quot;City&quot;: {&#xd;
            &quot;FIPSCode&quot;: null,&#xd;
            &quot;Id&quot;: 58895,&#xd;
            &quot;Name&quot;: &quot;Seattle&quot;&#xd;
          },&#xd;
          &quot;Country&quot;: {&#xd;
            &quot;FIPSCode&quot;: null,&#xd;
            &quot;Id&quot;: 63889,&#xd;
            &quot;Name&quot;: &quot;USA&quot;&#xd;
          },&#xd;
          &quot;County&quot;: {&#xd;
            &quot;FIPSCode&quot;: &quot;033&quot;,&#xd;
            &quot;Id&quot;: 1602,&#xd;
            &quot;Name&quot;: &quot;King&quot;&#xd;
          },&#xd;
          &quot;Id&quot;: 367332785,&#xd;
          &quot;Line1&quot;: &quot;7953 4th Avenue SW&quot;,&#xd;
          &quot;Line2&quot;: null,&#xd;
          &quot;Line3&quot;: null,&#xd;
          &quot;Line4&quot;: null,&#xd;
          &quot;State&quot;: {&#xd;
            &quot;Code&quot;: &quot;WA&quot;,&#xd;
            &quot;FIPSCode&quot;: &quot;53&quot;,&#xd;
            &quot;Id&quot;: 56,&#xd;
            &quot;Name&quot;: &quot;Washington&quot;&#xd;
          },&#xd;
          &quot;ZipCode&quot;: &quot;98106&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;PhoneNumbers&quot;: [&#xd;
        {&#xd;
          &quot;Id&quot;: 164491034,&#xd;
          &quot;AreaCode&quot;: &quot;206&quot;,&#xd;
          &quot;CountryCode&quot;: null,&#xd;
          &quot;Extension&quot;: &quot;&quot;,&#xd;
          &quot;Number&quot;: &quot;5502557&quot;,&#xd;
          &quot;PhoneNumberAddressBookId&quot;: 0,&#xd;
          &quot;PhoneType&quot;: {&#xd;
            &quot;Id&quot;: 125,&#xd;
            &quot;Description&quot;: &quot;Cellular&quot;,&#xd;
            &quot;ObjectCd&quot;: null&#xd;
          },&#xd;
          &quot;Comments&quot;: null&#xd;
        }&#xd;
      ],&#xd;
      &quot;Emails&quot;: [&#xd;
        {&#xd;
          &quot;Id&quot;: 164491033,&#xd;
          &quot;EmailType&quot;: {&#xd;
            &quot;Id&quot;: 127,&#xd;
            &quot;Description&quot;: &quot;E-Mail&quot;,&#xd;
            &quot;ObjectCd&quot;: null&#xd;
          },&#xd;
          &quot;EmailAddress&quot;: &quot;rsqwfjxpgu@gmail.com&quot;,&#xd;
          &quot;EmailAddressBookId&quot;: 0,&#xd;
          &quot;Comments&quot;: null&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;Id&quot;: 101564593,&#xd;
      &quot;BusinessPartyId&quot;: null,&#xd;
      &quot;BusinessEntity&quot;: null,&#xd;
      &quot;Couple&quot;: null,&#xd;
      &quot;Individual&quot;: {&#xd;
        &quot;Suffix&quot;: null,&#xd;
        &quot;FirstName&quot;: null,&#xd;
        &quot;MiddleName&quot;: null,&#xd;
        &quot;LastName&quot;: &quot;Available&quot;,&#xd;
        &quot;SSN&quot;: &quot;&quot;,&#xd;
        &quot;TaxForm1099SType&quot;: null&#xd;
      },&#xd;
      &quot;PrincipalType&quot;: {&#xd;
        &quot;Id&quot;: 48,&#xd;
        &quot;Description&quot;: &quot;Individual&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;SequenceNumber&quot;: 2,&#xd;
      &quot;TrustEstate&quot;: null,&#xd;
      &quot;Addresses&quot;: [&#xd;
        {&#xd;
          &quot;AddressType&quot;: {&#xd;
            &quot;Id&quot;: 119,&#xd;
            &quot;Description&quot;: &quot;Current Address&quot;,&#xd;
            &quot;ObjectCd&quot;: null&#xd;
          },&#xd;
          &quot;City&quot;: {&#xd;
            &quot;FIPSCode&quot;: null,&#xd;
            &quot;Id&quot;: 58895,&#xd;
            &quot;Name&quot;: &quot;Seattle&quot;&#xd;
          },&#xd;
          &quot;Country&quot;: {&#xd;
            &quot;FIPSCode&quot;: null,&#xd;
            &quot;Id&quot;: 63889,&#xd;
            &quot;Name&quot;: &quot;USA&quot;&#xd;
          },&#xd;
          &quot;County&quot;: {&#xd;
            &quot;FIPSCode&quot;: &quot;033&quot;,&#xd;
            &quot;Id&quot;: 1602,&#xd;
            &quot;Name&quot;: &quot;King&quot;&#xd;
          },&#xd;
          &quot;Id&quot;: 367565760,&#xd;
          &quot;Line1&quot;: &quot;7953 4th Avenue SW&quot;,&#xd;
          &quot;Line2&quot;: null,&#xd;
          &quot;Line3&quot;: null,&#xd;
          &quot;Line4&quot;: null,&#xd;
          &quot;State&quot;: {&#xd;
            &quot;Code&quot;: &quot;WA&quot;,&#xd;
            &quot;FIPSCode&quot;: &quot;53&quot;,&#xd;
            &quot;Id&quot;: 56,&#xd;
            &quot;Name&quot;: &quot;Washington&quot;&#xd;
          },&#xd;
          &quot;ZipCode&quot;: &quot;98106&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;PhoneNumbers&quot;: [],&#xd;
      &quot;Emails&quot;: []&#xd;
    }&#xd;
  ],&#xd;
&quot;Services&quot;: [&#xd;
    {&#xd;
      &quot;Assistant&quot;: null,&#xd;
      &quot;Id&quot;: 80749505,&#xd;
      &quot;Officer&quot;: {&#xd;
        &quot;Id&quot;: 5508,&#xd;
        &quot;FirstName&quot;: &quot;Pat&quot;,&#xd;
        &quot;LastName&quot;: &quot;Fullerton&quot;,&#xd;
        &quot;License&quot;: null&#xd;
      },&#xd;
      &quot;OwningOffice&quot;: {&#xd;
        &quot;Id&quot;: 874,&#xd;
        &quot;Name&quot;: &quot;WA KNG Seattle Title - 874&quot;&#xd;
      },&#xd;
      &quot;ProductionOffices&quot;: [&#xd;
        {&#xd;
          &quot;Id&quot;: 15153,&#xd;
          &quot;Name&quot;: &quot;RON Notary&quot;,&#xd;
          &quot;SequenceNumber&quot;: 1,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 14291,&#xd;
          &quot;Name&quot;: &quot;DirectWA-US&quot;,&#xd;
          &quot;SequenceNumber&quot;: 2,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 15310,&#xd;
          &quot;Name&quot;: &quot;DirectWA-SRI&quot;,&#xd;
          &quot;SequenceNumber&quot;: 3,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 9790,&#xd;
          &quot;Name&quot;: &quot;SupportADEC-West&quot;,&#xd;
          &quot;SequenceNumber&quot;: 4,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 9321,&#xd;
          &quot;Name&quot;: &quot;CA Underwriting Department&quot;,&#xd;
          &quot;SequenceNumber&quot;: 5,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 11435,&#xd;
          &quot;Name&quot;: &quot;DirectWA-NPS&quot;,&#xd;
          &quot;SequenceNumber&quot;: 6,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 14585,&#xd;
          &quot;Name&quot;: &quot;NPS-TitleResearch-ALL&quot;,&#xd;
          &quot;SequenceNumber&quot;: 7,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 11570,&#xd;
          &quot;Name&quot;: &quot;WA SSV Washington Centralized Services - 11570&quot;,&#xd;
          &quot;SequenceNumber&quot;: 8,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 15211,&#xd;
          &quot;Name&quot;: &quot;Escrow Production Services - DID&quot;,&#xd;
          &quot;SequenceNumber&quot;: 9,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 2770,&#xd;
          &quot;Name&quot;: &quot;WA KNG Renton Escrow - 2770&quot;,&#xd;
          &quot;SequenceNumber&quot;: 10,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 869,&#xd;
          &quot;Name&quot;: &quot;WA SNO Everett Title - 869&quot;,&#xd;
          &quot;SequenceNumber&quot;: 11,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 808,&#xd;
          &quot;Name&quot;: &quot;WA THS Thurston Title - 808&quot;,&#xd;
          &quot;SequenceNumber&quot;: 12,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 865,&#xd;
          &quot;Name&quot;: &quot;WA PRC Puyallup Title - 865&quot;,&#xd;
          &quot;SequenceNumber&quot;: 13,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 10465,&#xd;
          &quot;Name&quot;: &quot;z WA KNG Builder Services Title - 10465 INACTIVE 1/17/23&quot;,&#xd;
          &quot;SequenceNumber&quot;: 14,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 6912,&#xd;
          &quot;Name&quot;: &quot;z WA MNO KNG Out of State Title - 6912 INACTIVE 12/11/19&quot;,&#xd;
          &quot;SequenceNumber&quot;: 15,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 11998,&#xd;
          &quot;Name&quot;: &quot;WA Metro Title - 11998&quot;,&#xd;
          &quot;SequenceNumber&quot;: 16,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        }&#xd;
      ],&#xd;
      &quot;ServiceType&quot;: {&#xd;
        &quot;Id&quot;: 21,&#xd;
        &quot;Description&quot;: &quot;Title&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;ExternalServiceNumber&quot;: null,&#xd;
      &quot;CreationDate&quot;: &quot;2023-02-28T13:35:47.433&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Assistant&quot;: null,&#xd;
      &quot;Id&quot;: 80869619,&#xd;
      &quot;Officer&quot;: {&#xd;
        &quot;Id&quot;: 159356,&#xd;
        &quot;FirstName&quot;: &quot;Christie&quot;,&#xd;
        &quot;LastName&quot;: &quot;Duerr&quot;,&#xd;
        &quot;License&quot;: {&#xd;
          &quot;Id&quot;: 2118514,&#xd;
          &quot;Name&quot;: &quot;WA, 11360&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;OwningOffice&quot;: {&#xd;
        &quot;Id&quot;: 2770,&#xd;
        &quot;Name&quot;: &quot;WA KNG Renton Escrow - 2770&quot;&#xd;
      },&#xd;
      &quot;ProductionOffices&quot;: [&#xd;
        {&#xd;
          &quot;Id&quot;: 15153,&#xd;
          &quot;Name&quot;: &quot;RON Notary&quot;,&#xd;
          &quot;SequenceNumber&quot;: 1,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 14291,&#xd;
          &quot;Name&quot;: &quot;DirectWA-US&quot;,&#xd;
          &quot;SequenceNumber&quot;: 2,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 15310,&#xd;
          &quot;Name&quot;: &quot;DirectWA-SRI&quot;,&#xd;
          &quot;SequenceNumber&quot;: 3,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 6913,&#xd;
          &quot;Name&quot;: &quot;z WA MNO KNG NW Lenders Escrow 6913 INACTIVE 1/31/19&quot;,&#xd;
          &quot;SequenceNumber&quot;: 4,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;Id&quot;: 11570,&#xd;
          &quot;Name&quot;: &quot;WA SSV Washington Centralized Services - 11570&quot;,&#xd;
          &quot;SequenceNumber&quot;: 6,&#xd;
          &quot;Assistant&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null&#xd;
          },&#xd;
          &quot;Officer&quot;: {&#xd;
            &quot;Id&quot;: 0,&#xd;
            &quot;FirstName&quot;: null,&#xd;
            &quot;LastName&quot;: null,&#xd;
            &quot;License&quot;: null&#xd;
          }&#xd;
        }&#xd;
      ],&#xd;
      &quot;ServiceType&quot;: {&#xd;
        &quot;Id&quot;: 22,&#xd;
        &quot;Description&quot;: &quot;Escrow&quot;,&#xd;
        &quot;ObjectCd&quot;: null&#xd;
      },&#xd;
      &quot;ExternalServiceNumber&quot;: null,&#xd;
      &quot;CreationDate&quot;: &quot;2023-06-01T11:45:03.29&quot;&#xd;
    }&#xd;
  ],&#xd;
&quot;TransactionType&quot;: {&#xd;
    &quot;Id&quot;: 1,&#xd;
    &quot;Description&quot;: &quot;Sale w/Mortgage&quot;,&#xd;
    &quot;ObjectCd&quot;: null&#xd;
  },&#xd;
  &quot;Region&quot;: {&#xd;
    &quot;Id&quot;: 644,&#xd;
    &quot;Name&quot;: &quot;Northwest&quot;&#xd;
  },&#xd;
&quot;ProjectFileFlag&quot;: null,&#xd;
&quot;ProjectFileId&quot;: null,&#xd;
&quot;ReservedFileNumberFlag&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Eclipse/api/files</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${iDashAccessToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FileNumber</stringProp>
              <stringProp name="RegexExtractor.regex">Ignite June LT Test file&quot;,&quot;FileNumber&quot;:&quot;(.+?)&quot;,&quot;FileOriginator&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">IgniteFileNum</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;LastName&quot;:null}},&quot;Id&quot;:(.+?),&quot;MasterFileFlag&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters">${FileNumber},${IgniteFileNum}</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

String path=FileServer.getFileServer().getBaseDir();

     String var1 = vars.get(&quot;FileNumber&quot;);
     String var2 = vars.get(&quot;IgniteFileNum&quot;);


f = new FileOutputStream(&quot;C://_JmeterLoadTestFolder/BatchTaskEdit/2000Files1.csv&quot;,true);
p = new PrintStream(f); 

this.interpreter.setOut(p); 
p.println(var1 + &quot;,&quot; + var2);

f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">120000</stringProp>
          </TestAction>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1000</stringProp>
        <stringProp name="ThreadGroup.ramp_time">450</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IgnitePhase2_Checklist_T01_ClickFile" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFileSummaryDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/file/${FastFileID}/getFileSummaryDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">C:/_JmeterLoadTestFolder/DataSetup/ATM/ATM.csv</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">FileID,FastID</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="file/FastFileID/ignitefileid" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/file/${FastFileID}/ignitefileid</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">IgniteFileID</stringProp>
              <stringProp name="RegexExtractor.regex">(.*)</stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
            </RegexExtractor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="file/FastFileID/ignitefileid" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/file/${FastFileID}/ignitefileid</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not;A Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;91&quot;, &quot;Chromium&quot;;v=&quot;91&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">IgniteFileID</stringProp>
              <stringProp name="RegexExtractor.regex">(.+)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">C:/_JmeterLoadTestFolder/DataSetup/CheckList/ChecklistScript_200_CertProdIssue.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">FastFileID</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="file/FastFileID/headerDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/file/${FastFileID}/headerDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not;A Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;91&quot;, &quot;Chromium&quot;;v=&quot;91&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1166164819">Sale w/Mortgage</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">File Not Found</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetMessageCenterFileMessageAccess/FastFileID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/portalmessageapi/api/v2/MessageCenterAccess/fastFileId/${FastFileID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not;A Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;91&quot;, &quot;Chromium&quot;;v=&quot;91&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="FastFile/transactionpreview/FastFileID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/FastFile/transactionpreview/${FastFileID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not;A Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;91&quot;, &quot;Chromium&quot;;v=&quot;91&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="FastFile/transactionparties/FastFileID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/FastFile/transactionparties/${FastFileID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not;A Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;91&quot;, &quot;Chromium&quot;;v=&quot;91&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NotificationData" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;fastFileId&quot;:${FastFileID},&quot;fileId&quot;:${IgniteFileID},&quot;userId&quot;:16,&quot;userName&quot;:&quot;qaazureignite&quot;,&quot;initials&quot;:&quot;QQ&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/v2/NotificationData</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NotificationData/FastFileID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/v2/NotificationData/${FastFileID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="file/FastFileID/checklist/refresh" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/v2/file/${FastFileID}/checklist/refresh</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="file/FastFileID/checklist/reevaluation" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/v2/file/${FastFileID}/checklist/reevaluation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TypeCodes/64" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/TypeCodes/64</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="file/FastFileID/ruleengine/refresh" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/v2/ruleengine/file/${FastFileID}/refresh</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay"></stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">15000</stringProp>
            <stringProp name="RandomTimer.range">20000.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="file/IgniteFileID/filetask" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/v2/file/${IgniteFileID}/filetask</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OTCTaskID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;displayName&quot;: &quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">2</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">OTCTaskID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.[?(@.displayName == &apos;OTC Commitment Ordered&apos;)].fileTaskId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1098712604">JulyNewTask1</stringProp>
                <stringProp name="-1098712603">JulyNewTask2</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">New Changes not reflecting</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CheckList/UserPreference" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;userPreferenceID&quot;:376,&quot;userID&quot;:16,&quot;entityTypeId&quot;:281,&quot;preference&quot;:{&quot;taskProperties&quot;:false,&quot;noteType&quot;:410,&quot;noteStatus&quot;:410,&quot;groupBy&quot;:377,&quot;activityLogCategory&quot;:250},&quot;createdUserId&quot;:16,&quot;updatedUserId&quot;:16,&quot;createdUser&quot;:null,&quot;updatedUser&quot;:null,&quot;updateTimestamp&quot;:&quot;AAAAALfyjhI=&quot;,&quot;isDeleted&quot;:0,&quot;createdDate&quot;:&quot;2020-09-08T09:51:50.1654014&quot;,&quot;updatedDate&quot;:&quot;2023-02-24T10:23:00.8401521&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/v2/CheckList/UserPreference</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TypeCodes/65" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/v2/TypeCodes/65</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TypeCodes/67" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/v2/TypeCodes/67</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="fileTask/TaskID/Detail" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/v2/fileTask/${OTCTaskID}/Detail</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="note/0/All/All/IgniteFileID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/v2/note/0/410/410/${IgniteFileID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="search/file/FastFileID/DIDEmployees" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/v2/search/file/${FastFileID}/DIDEmployees</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TaskStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">igniteapi/api/TaskStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(AzureAuthToken)}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Cache-control" elementType="Header">
                  <stringProp name="Header.name">Cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">zdFIZyQumv4ZoQQh0f5DF61qnyThtkor11ihAi3k</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">520000</stringProp>
          </TestAction>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
